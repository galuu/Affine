\documentclass[a4paper,10pt]{article}
\usepackage[unicode,verbose]{hyperref}
\usepackage{amsmath,amssymb,amsthm} \usepackage{pb-diagram}
\usepackage{ucs}
\usepackage{noweb}
%\usepackage[utf8x]{inputenc}
%\usepackage[russian]{babel}
\usepackage{cmap}
\usepackage[pdftex]{graphicx}
\pagestyle{plain}
\theoremstyle{definition} \newtheorem{Def}{Definition}
\begin{document}
@
\title{Finite dimensional Lie algebras}
\author{Anton Nazarov}
\begin{abstract}
  We present concise introduction to the representation theory of finite-dimensional Lie algebras and illustrate it with the computational algorithms implemented in Scheme. 
\end{abstract}
\section{Introduction}
\label{sec:introduction}
Representation theory of finite-dimensional Lie algebras is central to the study of continous symmetries in physics. This theory is well-understood and there exist standard cources and textbooks on the subject \cite{carter2005lie}, [humphreys]. Nevertheless some problems of the representation theory require extensive computation and no standard textbook on the computational algorithms is known to the author of this notes. There exists a volume [Belinfante], but it was written in 1970-es and have not been updated since, so its contents are limited to the early approaches and implementations on the old hardware wich is unavailable now. Also some progress was made in the computational algorithms of the representation theory since the publication of [Belinfante]. It is important to mention series of papers by Patera et al. (see \cite{moody1982fast} and references therein) and books \cite{kass1990ala}, [Kass-Moody-Slansky on finite dimensional algebras] which introduce new and optimised algorithms although do not disscuss the implementation.
There exist several solid implementation of the core algorithms. We want to mention Maple package Coxeter/Weyl \cite{stembridge1995mps} and standalone programs LiE \cite{vanleeuwen1994lsp} and LambdaTensor \cite{fischbacher2002ilp}. These programs are solid and rather fast but have not seen any updates in last several years. Also they are not always convenient to use since they lack graphical user interface and interoperanility with the popular programming languages and mathematical programs such as Mathematica, Python or Fortran.
We want to summarise some basic notions and algorithms of representation theory in order to stimulate the emergence of more modern and universal software or at least give some tools to the scientists who by some reasons can not use the existing software.

Our implementation use programming language Scheme and is presented as the Literate program [Knuth]. The choice of the language is due to high portability of its implementations \footnote{There exist Scheme implementations for UNIX, Windows, Linux, Mac OS, Palm OS, Windows CE/Pocket PC/Windows Mobile, Java platform and even microcontrollers, see [some website] for the details}, wide use of Scheme for the teaching [SICP] and personal preferences of the author. 
<<library.scm>>=
<<Semi-standard Scheme procedures .scm>>
<<LispMe Objects .scm>>
@
\bibliography{LiterateLie}{}
\bibliographystyle{utphys}

\end{document}
 
